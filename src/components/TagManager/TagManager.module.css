/**
 * TagManager component styles
 * Modal dialog for managing global tags with cyberpunk glass-morphism design
 */

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.7);
  backdrop-filter: blur(8px);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: var(--spacing-md);
}

.modal {
  background: var(--glass-bg);
  backdrop-filter: blur(var(--glass-blur));
  border: 1px solid var(--glass-border);
  border-radius: var(--radius-lg);
  box-shadow: var(--glass-shadow);
  max-width: 600px;
  width: 100%;
  max-height: 80vh;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--spacing-lg);
  border-bottom: 1px solid var(--glass-border);
}

.title {
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--color-text-primary);
  margin: 0;
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

.closeButton {
  width: 32px;
  height: 32px;
  border: none;
  background: transparent;
  color: var(--color-text-secondary);
  font-size: 2rem;
  line-height: 1;
  cursor: pointer;
  border-radius: var(--radius-sm);
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.closeButton:hover {
  background: rgba(255, 255, 255, 0.1);
  color: var(--color-text-primary);
}

.closeButton:focus-visible {
  outline: 2px solid var(--color-cyan);
  outline-offset: 2px;
}

.content {
  padding: var(--spacing-lg);
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg);
}

.formSection {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-md);
  padding: var(--spacing-md);
  background: rgba(255, 255, 255, 0.02);
  border-radius: var(--radius-md);
  border: 1px solid rgba(255, 255, 255, 0.05);
}

.formGroup {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xs);
}

.label {
  font-size: 0.875rem;
  font-weight: 600;
  color: var(--color-text-primary);
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

.input {
  width: 100%;
  padding: var(--spacing-sm);
  background: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: var(--radius-sm);
  color: var(--color-text-primary);
  font-size: 1rem;
  font-family: inherit;
  transition: all 0.2s ease;
}

.input:hover {
  background: rgba(255, 255, 255, 0.08);
  border-color: rgba(79, 209, 255, 0.3);
}

.input:focus {
  outline: none;
  background: rgba(255, 255, 255, 0.08);
  border-color: var(--color-cyan);
  box-shadow: 0 0 0 2px rgba(79, 209, 255, 0.1);
}

.input[aria-invalid='true'] {
  border-color: var(--color-coral);
}

.error {
  font-size: 0.75rem;
  color: var(--color-coral);
  margin-top: var(--spacing-xs);
}

.colorPicker {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
}

.colorSwatches {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(40px, 1fr));
  gap: var(--spacing-xs);
}

.colorSwatch {
  width: 40px;
  height: 40px;
  border-radius: var(--radius-sm);
  border: 2px solid transparent;
  cursor: pointer;
  transition: all 0.2s ease;
  position: relative;
}

.colorSwatch:hover {
  border-color: rgba(255, 255, 255, 0.3);
  transform: scale(1.1);
}

.colorSwatchSelected {
  border-color: var(--color-cyan);
  box-shadow: 0 0 12px rgba(79, 209, 255, 0.4);
}

.customColorInput {
  width: 100%;
  height: 40px;
  border-radius: var(--radius-sm);
  border: 1px solid var(--glass-border);
  background: transparent;
  cursor: pointer;
}

.actions {
  display: flex;
  gap: var(--spacing-sm);
  justify-content: flex-end;
}

.button {
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--radius-sm);
  font-weight: 600;
  font-size: 0.875rem;
  cursor: pointer;
  transition: all 0.2s ease;
  border: 1px solid transparent;
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

.button:focus-visible {
  outline: 2px solid var(--color-cyan);
  outline-offset: 2px;
}

.buttonPrimary {
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--radius-sm);
  font-weight: 600;
  font-size: 0.875rem;
  cursor: pointer;
  transition: all 0.2s ease;
  border: 1px solid transparent;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  background: var(--color-cyan);
  color: var(--color-bg);
  border-color: var(--color-cyan);
}

.buttonPrimary:hover {
  background: color-mix(in srgb, var(--color-cyan) 90%, black);
  box-shadow: 0 0 12px rgba(79, 209, 255, 0.4);
}

.buttonPrimary:focus-visible {
  outline: 2px solid var(--color-cyan);
  outline-offset: 2px;
}

.buttonSecondary {
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--radius-sm);
  font-weight: 600;
  font-size: 0.875rem;
  cursor: pointer;
  transition: all 0.2s ease;
  border: 1px solid transparent;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  background: rgba(255, 255, 255, 0.05);
  color: var(--color-text-primary);
  border-color: rgba(255, 255, 255, 0.2);
}

.buttonSecondary:hover {
  background: rgba(255, 255, 255, 0.1);
  border-color: rgba(255, 255, 255, 0.3);
}

.buttonSecondary:focus-visible {
  outline: 2px solid var(--color-cyan);
  outline-offset: 2px;
}

.buttonDanger {
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--radius-sm);
  font-weight: 600;
  font-size: 0.875rem;
  cursor: pointer;
  transition: all 0.2s ease;
  border: 1px solid transparent;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  background: var(--color-coral);
  color: var(--color-bg);
  border-color: var(--color-coral);
}

.buttonDanger:hover {
  background: color-mix(in srgb, var(--color-coral) 90%, black);
  box-shadow: 0 0 12px rgba(248, 113, 113, 0.4);
}

.buttonDanger:focus-visible {
  outline: 2px solid var(--color-cyan);
  outline-offset: 2px;
}

.tagsList {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xs);
}

.tagItem {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: var(--spacing-sm);
  background: rgba(255, 255, 255, 0.02);
  border-radius: var(--radius-sm);
  border: 1px solid rgba(255, 255, 255, 0.05);
  transition: all 0.2s ease;
}

.tagItem:hover {
  background: rgba(255, 255, 255, 0.04);
  border-color: rgba(255, 255, 255, 0.1);
}

.tagInfo {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
}

.tagPreview {
  display: inline-flex;
  align-items: center;
  gap: 0.25rem;
  font-size: 0.875rem;
  padding: 0.25rem 0.5rem;
  border-radius: var(--radius-sm);
  background: color-mix(in srgb, var(--tag-color) 15%, transparent);
  border: 1px solid color-mix(in srgb, var(--tag-color) 40%, transparent);
  color: var(--tag-color);
  font-weight: 500;
}

.tagDot {
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: var(--tag-color);
  flex-shrink: 0;
}

.tagActions {
  display: flex;
  gap: var(--spacing-xs);
}

.iconButton {
  width: 32px;
  height: 32px;
  border: none;
  background: rgba(255, 255, 255, 0.05);
  color: var(--color-text-secondary);
  font-size: 1rem;
  cursor: pointer;
  border-radius: var(--radius-sm);
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.iconButton:hover:not(:disabled) {
  background: rgba(255, 255, 255, 0.1);
  color: var(--color-text-primary);
}

.iconButton:disabled {
  opacity: 0.3;
  cursor: not-allowed;
}

.iconButtonDanger:hover:not(:disabled) {
  background: var(--color-coral);
  color: var(--color-bg);
}

.iconButton:focus-visible {
  outline: 2px solid var(--color-cyan);
  outline-offset: 2px;
}

.readOnly {
  opacity: 0.6;
}

/* Mobile responsive */
@media (max-width: 768px) {
  .modal {
    max-width: 100%;
    max-height: 90vh;
  }

  .header {
    padding: var(--spacing-md);
  }

  .title {
    font-size: 1.25rem;
  }

  .content {
    padding: var(--spacing-md);
  }

  .colorSwatches {
    grid-template-columns: repeat(auto-fill, minmax(36px, 1fr));
  }

  .colorSwatch {
    width: 36px;
    height: 36px;
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .colorSwatch,
  .button,
  .iconButton,
  .input,
  .tagItem {
    transition: none;
  }
}
