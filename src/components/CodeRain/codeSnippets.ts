export type TokenType = 'keyword' | 'string' | 'function' | 'number' | 'punctuation' | 'plain';

export interface CodeToken {
  text: string;
  type: TokenType;
}

export type CodeSnippet = CodeToken[];

export const CODE_SNIPPETS: CodeSnippet[] = [
  // JavaScript snippets
  [
    { text: 'const', type: 'keyword' },
    { text: ' data ', type: 'plain' },
    { text: '=', type: 'punctuation' },
    { text: ' await', type: 'keyword' },
    { text: ' fetch', type: 'function' },
    { text: '(', type: 'punctuation' },
    { text: 'url', type: 'plain' },
    { text: ');', type: 'punctuation' },
  ],
  [
    { text: 'if', type: 'keyword' },
    { text: ' (', type: 'punctuation' },
    { text: 'user', type: 'plain' },
    { text: '.', type: 'punctuation' },
    { text: 'isActive', type: 'plain' },
    { text: ') {', type: 'punctuation' },
  ],
  [
    { text: 'return', type: 'keyword' },
    { text: ' items', type: 'plain' },
    { text: '.', type: 'punctuation' },
    { text: 'map', type: 'function' },
    { text: '(', type: 'punctuation' },
    { text: 'x', type: 'plain' },
    { text: ' => ', type: 'punctuation' },
    { text: 'x', type: 'plain' },
    { text: '.', type: 'punctuation' },
    { text: 'id', type: 'plain' },
    { text: ');', type: 'punctuation' },
  ],
  [
    { text: 'function', type: 'keyword' },
    { text: ' handleClick', type: 'function' },
    { text: '() {', type: 'punctuation' },
  ],
  [
    { text: 'export', type: 'keyword' },
    { text: ' default', type: 'keyword' },
    { text: ' App', type: 'plain' },
    { text: ';', type: 'punctuation' },
  ],
  [
    { text: 'const', type: 'keyword' },
    { text: ' [', type: 'punctuation' },
    { text: 'state', type: 'plain' },
    { text: ', ', type: 'punctuation' },
    { text: 'setState', type: 'plain' },
    { text: '] = ', type: 'punctuation' },
    { text: 'useState', type: 'function' },
    { text: '();', type: 'punctuation' },
  ],
  [
    { text: 'import', type: 'keyword' },
    { text: ' React ', type: 'plain' },
    { text: 'from', type: 'keyword' },
    { text: ' "react"', type: 'string' },
    { text: ';', type: 'punctuation' },
  ],
  [
    { text: 'try', type: 'keyword' },
    { text: ' { ...', type: 'punctuation' },
    { text: ' } ', type: 'punctuation' },
    { text: 'catch', type: 'keyword' },
    { text: ' (', type: 'punctuation' },
    { text: 'error', type: 'plain' },
    { text: ') {}', type: 'punctuation' },
  ],

  // Python snippets
  [
    { text: 'def', type: 'keyword' },
    { text: ' calculate_sum', type: 'function' },
    { text: '(', type: 'punctuation' },
    { text: 'nums', type: 'plain' },
    { text: '):', type: 'punctuation' },
  ],
  [
    { text: 'for', type: 'keyword' },
    { text: ' item ', type: 'plain' },
    { text: 'in', type: 'keyword' },
    { text: ' collection', type: 'plain' },
    { text: ':', type: 'punctuation' },
  ],
  [
    { text: 'import', type: 'keyword' },
    { text: ' numpy ', type: 'plain' },
    { text: 'as', type: 'keyword' },
    { text: ' np', type: 'plain' },
  ],
  [
    { text: 'class', type: 'keyword' },
    { text: ' DataModel', type: 'plain' },
    { text: ':', type: 'punctuation' },
  ],
  [
    { text: 'if', type: 'keyword' },
    { text: ' __name__ ', type: 'plain' },
    { text: '==', type: 'punctuation' },
    { text: ' "__main__"', type: 'string' },
    { text: ':', type: 'punctuation' },
  ],
  [
    { text: 'return', type: 'keyword' },
    { text: ' [', type: 'punctuation' },
    { text: 'x', type: 'plain' },
    { text: '**', type: 'punctuation' },
    { text: '2', type: 'number' },
    { text: ' for ', type: 'keyword' },
    { text: 'x ', type: 'plain' },
    { text: 'in', type: 'keyword' },
    { text: ' range', type: 'function' },
    { text: '(', type: 'punctuation' },
    { text: '10', type: 'number' },
    { text: ')]', type: 'punctuation' },
  ],

  // HTML snippets
  [
    { text: '<div', type: 'punctuation' },
    { text: ' className', type: 'plain' },
    { text: '=', type: 'punctuation' },
    { text: '"container"', type: 'string' },
    { text: '>', type: 'punctuation' },
  ],
  [
    { text: '<button', type: 'punctuation' },
    { text: ' onClick', type: 'plain' },
    { text: '={', type: 'punctuation' },
    { text: 'handler', type: 'plain' },
    { text: '}>', type: 'punctuation' },
  ],
  [
    { text: '<input', type: 'punctuation' },
    { text: ' type', type: 'plain' },
    { text: '=', type: 'punctuation' },
    { text: '"text"', type: 'string' },
    { text: ' />', type: 'punctuation' },
  ],
  [
    { text: '<h1', type: 'punctuation' },
    { text: ' style', type: 'plain' },
    { text: '={{', type: 'punctuation' },
    { text: ' color', type: 'plain' },
    { text: ': ', type: 'punctuation' },
    { text: '"cyan"', type: 'string' },
    { text: ' }}>', type: 'punctuation' },
  ],

  // CSS snippets
  [
    { text: '.card', type: 'plain' },
    { text: ' { ', type: 'punctuation' },
    { text: 'display', type: 'keyword' },
    { text: ': ', type: 'punctuation' },
    { text: 'flex', type: 'plain' },
    { text: '; }', type: 'punctuation' },
  ],
  [
    { text: 'background', type: 'keyword' },
    { text: ': ', type: 'punctuation' },
    { text: 'linear-gradient', type: 'function' },
    { text: '()', type: 'punctuation' },
  ],
  [
    { text: '@media', type: 'keyword' },
    { text: ' (', type: 'punctuation' },
    { text: 'max-width', type: 'keyword' },
    { text: ': ', type: 'punctuation' },
    { text: '768px', type: 'number' },
    { text: ') {}', type: 'punctuation' },
  ],
  [
    { text: 'transform', type: 'keyword' },
    { text: ': ', type: 'punctuation' },
    { text: 'translateY', type: 'function' },
    { text: '(', type: 'punctuation' },
    { text: '10px', type: 'number' },
    { text: ');', type: 'punctuation' },
  ],

  // More JavaScript variations
  [
    { text: 'const', type: 'keyword' },
    { text: ' result ', type: 'plain' },
    { text: '=', type: 'punctuation' },
    { text: ' data', type: 'plain' },
    { text: '.', type: 'punctuation' },
    { text: 'filter', type: 'function' },
    { text: '(', type: 'punctuation' },
    { text: 'x', type: 'plain' },
    { text: ' => ', type: 'punctuation' },
    { text: 'x', type: 'plain' },
    { text: ' > ', type: 'punctuation' },
    { text: '0', type: 'number' },
    { text: ');', type: 'punctuation' },
  ],
  [
    { text: 'await', type: 'keyword' },
    { text: ' Promise', type: 'plain' },
    { text: '.', type: 'punctuation' },
    { text: 'all', type: 'function' },
    { text: '([', type: 'punctuation' },
    { text: 'tasks', type: 'plain' },
    { text: ']);', type: 'punctuation' },
  ],
  [
    { text: 'useEffect', type: 'function' },
    { text: '(() => {}, [', type: 'punctuation' },
    { text: 'deps', type: 'plain' },
    { text: ']);', type: 'punctuation' },
  ],
  [
    { text: 'let', type: 'keyword' },
    { text: ' count ', type: 'plain' },
    { text: '=', type: 'punctuation' },
    { text: ' 0', type: 'number' },
    { text: ';', type: 'punctuation' },
  ],
  [
    { text: 'console', type: 'plain' },
    { text: '.', type: 'punctuation' },
    { text: 'log', type: 'function' },
    { text: '(', type: 'punctuation' },
    { text: '"debug"', type: 'string' },
    { text: ');', type: 'punctuation' },
  ],
  [
    { text: 'switch', type: 'keyword' },
    { text: ' (', type: 'punctuation' },
    { text: 'type', type: 'plain' },
    { text: ') { ', type: 'punctuation' },
    { text: 'case', type: 'keyword' },
    { text: ' "A"', type: 'string' },
    { text: ': }', type: 'punctuation' },
  ],
  [
    { text: '...', type: 'punctuation' },
    { text: 'rest', type: 'plain' },
    { text: ' } = ', type: 'punctuation' },
    { text: 'obj', type: 'plain' },
    { text: ';', type: 'punctuation' },
  ],
  [
    { text: 'async', type: 'keyword' },
    { text: ' function', type: 'keyword' },
    { text: ' fetchData', type: 'function' },
    { text: '() {}', type: 'punctuation' },
  ],
];
